# Bash-completion for eix
# Author: Emil Beinroth <emilbeinroth@gmx.net>

###########################################################################
#   eix is a small utility for searching ebuilds in the                   #
#   Gentoo Linux portage system. It uses indexing to allow quick searches #
#   in package descriptions with regular expressions.                     #
#                                                                         #
#   https://sourceforge.net/projects/eix                                  #
#                                                                         #
#   Copyright (c)                                                         #
#     Wolfgang Frisch <xororand@users.sourceforge.net>                    #
#     Emil Beinroth <emilbeinroth@gmx.net>                                #
#                                                                         #
#   This program is free software; you can redistribute it and/or modify  #
#   it under the terms of the GNU General Public License as published by  #
#   the Free Software Foundation; either version 2 of the License, or     #
#   (at your option) any later version.                                   #
#                                                                         #
#   This program is distributed in the hope that it will be useful,       #
#   but WITHOUT ANY WARRANTY; without even the implied warranty of        #
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #
#   GNU General Public License for more details.                          #
#                                                                         #
#   You should have received a copy of the GNU General Public License     #
#   along with this program; if not, write to the                         #
#   Free Software Foundation, Inc.,                                       #
#   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #
###########################################################################

_update_eix()
{
	local opts prev cur stop_on compwords
	opts="-V --version -h --help -q --quiet --dump --exclude-overlay" 
	# Terminal options
	stop_on=' (--version|-V|--dump|-h|--help)'
	
	prev="${COMP_WORDS[COMP_CWORD-1]}"
	cur="${COMP_WORDS[COMP_CWORD]}"
	compwords="${COMP_WORDS[*]}"

	# Check for terminal options
	have_terminal=$(echo "${compwords}" | egrep --regex="${stop_on}")
	if [ -n "$have_terminal" ]; then
		unset COMPREPLY
		return 0
	fi

	case "$prev" in
		# Complete for overlays
		--exclude-overlay)
			local overlays
			overlays=$(bash -c 'source /etc/make.conf; echo -n ${PORTDIR_OVERLAY}')
			# only complete if we really have overlays
			if [[ -n "$overlays" ]]; then
				COMPREPLY=($(compgen -W "$overlays" -- ${cur}))
				return 0
			fi
		;;
	esac
	COMPREPLY=($(compgen -W  "$opts" \
				-- ${COMP_WORDS[COMP_CWORD]}))
	return 0
}
complete -F _update_eix update-eix

_eix()
{
	local cur compwords prev
	local stop_on opts operator_opts arg_opts

	# All options
	opts="-r --regex -e --exact -p --pattern -f --fuzzy
	-s --name -S --description -C --category -A --category-name -H --homepage -L --license
	-I --installed -D --dup-versions -! --not
	--format --format-compact --format-verbose
	--dump
	-q --quiet -n --nocolor --force-color
	-c --compact -v --verbose 
	-l --versionlines
	-V --version"

	# Logical operators
	operator_opts="-a --and -o --or"

	# Options with arguments
	arg_opts="(--format|--format-compact|--format-verbose)"

	# Terminal options
	stop_on=' (--dump|-h|--help|-V|--version)'

	prev="${COMP_WORDS[COMP_CWORD-1]}"
	cur="${COMP_WORDS[COMP_CWORD]}"
	compwords="${COMP_WORDS[*]}"

	# Check for terminal options
	have_terminal=$(echo "${compwords}" | egrep --regex="${stop_on}")
	if [ -n "$have_terminal" ]; then
		unset COMPREPLY
		return 0
	fi

	case "$prev" in
		# Options that require a user-defined parameter can not be completed
		--format|--format-verbose|--format-compact)
			return 0
		;;
	esac

	# If the last on was no -* and the one befor that was not in arg_opts
	# we are allowed to only complete with operator_opts
	if [[ $COMP_CWORD -gt 1 && "$prev" != -* ]] \
		&& [[ $COMP_CWORD -lt 3 \
			|| -z $(echo "${COMP_WORDS[COMP_CWORD-2]}" | egrep -o --regex="${arg_opts}") ]]; then
			COMPREPLY=($(compgen -W  "$operator_opts" \
						-- ${COMP_WORDS[COMP_CWORD]}))
			return 0
	fi

	# In any other case we complete with all we got
	COMPREPLY=($(compgen -W  "$opts" \
				-- ${COMP_WORDS[COMP_CWORD]}))
	return 0
}
complete -F _eix eix

# vim:syntax=sh:
